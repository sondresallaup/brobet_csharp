@model Brobet.ViewModels.IndexViewModel
@{
}


<div class="body-container">
    <div class="day-arrows">
        <a class="previous disabled" href="javascript:void(0);"><i class="fas fa-arrow-left"></i></a>
        <div class="day-string"></div>
        <a class="next" href="javascript:void(0);"><i class="fas fa-arrow-right"></i></a>
    </div>
    <div class="fixtures">
        @{
            foreach (var seasonD in Model.fixtures)
            {
                var season = seasonD.Key;
                <div class="season-name">
                    @Model.seasonNameFromId(season)
                </div>
                foreach (var fixture in seasonD.Value)
                {
                    <div class="fixture status-@fixture.status" data-fixture-id="@fixture.id" data-status="@fixture.status">
                        <table>
                            <tr class="local-team">
                                <td class="score">
                                    <span class="score-span">
                                        @fixture.localTeamScore
                                    </span>
                                </td>
                                <td class="logo">
                                    <img src="@fixture.localTeamLogo" />
                                </td>
                                <td class="name">
                                    @fixture.localTeamName
                                </td>
                                <td rowspan="2" class="time">
                                    <span class="min">@fixture.minute'</span>
                                    <span class="status">@fixture.status</span>
                                    <span class="scheduled"></span>
                                </td>
                            </tr>
                            <tr class="visitor-team">
                                <td class="score">
                                    <span class="score-span">
                                        @fixture.visitorTeamScore
                                    </span>
                                </td>
                                <td class="logo">
                                    <img src="@fixture.visitorTeamLogo" />
                                </td>
                                <td class="name">
                                    @fixture.visitorTeamName
                                </td>
                            </tr>
                        </table>
                    </div>
                }
            }
            if (Model.fixtures.Count == 0)
            {
                <div class="no-fixtures">
                    No fixtures this day.
                </div>
            }
        }
    </div>
</div>


<script>
    var daysFromNow = @Model.daysFromNow;
    var fixtureId, friendId, bet;

    $(function () {
        //window.setInterval(function () {
        //    updateFixtures();
        //}, 10000);
        var seasons;
        var fixtures;

        function updateFixtures() {
            $.get('/Home/GetFixturesJson?daysFromNow=@Model.daysFromNow', function (data) {
                seasons = JSON.parse(data);
                for (var seasonKey in seasons)
                {
                    console.log(fixtures);
                    fixtures = seasons[seasonKey];
                    for (var key in fixtures) {
                        var fixture = fixtures[key];
                        var $fixture = $(".body-container").find(`.fixture[data-fixture-id='${fixture.id}']`);
                        $fixture.attr('class', 'fixture');
                        $fixture.addClass('status-' + fixture.status);
                        $fixture.data('status', fixture.status);

                        // Local team
                        var $localTeam = $fixture.find('.local-team');
                        $localTeam.find('.score .score-span').html(fixture.localTeamScore);
                        // Visitor team
                        var $visitorTeam = $fixture.find('.visitor-team');
                        $visitorTeam.find('.score .score-span').html(fixture.visitorTeamScore);

                        // Time
                        var startingAt = moment(fixture.staringAtString);
                        $fixture.find('.min').html(fixture.minute + "'");
                        $fixture.find('.status').html(fixture.status);
                        $fixture.find('.scheduled').html(startingAt.format('LT'));
                    }
                }
            });
        }
        updateFixtures();

        if (daysFromNow > 0) {
            $('.day-arrows a.previous').removeClass('disabled');
        }

        $('.day-string').html(moment('@Model.currentDate').format('LL'));


        $('.day-arrows a').click(function () {
            var $arrow = $(this);
            if ($arrow.hasClass('disabled')) return;

            if ($arrow.hasClass('next')) {
                daysFromNow++;
            }
            else {
                daysFromNow--;
            }
            $('.new-bet-modal').find('.modal-body .fixtures').html('Loading...');
            $.get('/Home/IndexPartial?daysFromNow=' + daysFromNow, function (data) {
                //$('.new-bet-modal').find('.modal-body .fixtures').fadeIn();
                $('.new-bet-modal').find('.modal-body').html(data);
            });
        })

        $('.fixture').click(function () {
            if ($(this).data('status') !== 'NS') {
                fixtureId = $(this).data('fixture-id');
                location.href = '/Fixture/Index/' + fixtureId;
                return;
            }
            fixtureId = $(this).data('fixture-id');
            location.href = '/Bet/CreateRequest/' + fixtureId;
            return;
            showModal('friends-list-modal');
        });

        $('.modal-background, .modal .friends-list-modal .cancel').click(function (e) {
            if (e.target !== e.currentTarget) return;
            hideModal(null);
        });

        $('.friend').click(function () {
            friendId = $(this).data('friend-id');
            console.log(friendId);
            hideModal('friends-list-modal');
            showModal('bet-modal');
        });

        $('.bet').click(function () {
            bet = $(this).data('value');
            console.log(bet);
            hideModal('bet-modal');
            showModal('amount-modal');
        });

        $('.place-bet-button').click(function () {
            var $modal = $('#amount-modal');
            var homeAmount = $modal.find('.home-amount').val();
            var awayAmount = $modal.find('.away-amount').val();
            if (homeAmount.length === 0 || awayAmount.length === 0) {
                return;
            }
            var data = {
                toUserId: friendId,
                fixtureId: fixtureId,
                initiatorBet: bet,
                homeAmount: homeAmount,
                awayAmount: awayAmount
            }
            $.post('/Bet/Place', data, function (response) {
                console.log(response);
                location.href = '/Bet/List';
            });
            hideModal(null);
        });

        function showModal(selector) {
            var $this = $('#' + selector + '.modal-background');
            $this.removeClass('hidden');
        }

        function hideModal(selector) {
            var $this = $('.modal-background');
            if (selector != null) {
                $this = $('#' + selector + '.modal-background');
            }
            $this.addClass('hidden');
        }
    });

</script>